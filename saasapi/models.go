//go:build go1.18
// +build go1.18

// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.9.1, generator: @autorest/go@4.0.0-preview.43)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// DO NOT EDIT.

package saasapi

import "time"

type AADIdentifier struct {
	EmailID *string `json:"emailId,omitempty"`
	ObjectID *string `json:"objectId,omitempty"`
	Puid *string `json:"puid,omitempty"`
	TenantID *string `json:"tenantId,omitempty"`
}

type FulfillmentInternalServerErrorResponse struct {
	Error *FulfillmentInternalServerErrorResponseError `json:"error,omitempty"`
}

type FulfillmentInternalServerErrorResponseError struct {
	Code *string `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
}

// FulfillmentOperationsClientActivateSubscriptionOptions contains the optional parameters for the FulfillmentOperationsClient.ActivateSubscription
// method.
type FulfillmentOperationsClientActivateSubscriptionOptions struct {
	// A unique string value for operation on the client. This parameter correlates all events from client operation with events
// on the server side. If this value isn't provided, one will be generated and
// provided in the response headers.
	CorrelationID *string
	// A unique string value for tracking the request from the client, preferably a GUID. If this value isn't provided, one will
// be generated and provided in the response headers.
	RequestID *string
}

// FulfillmentOperationsClientDeleteSubscriptionOptions contains the optional parameters for the FulfillmentOperationsClient.DeleteSubscription
// method.
type FulfillmentOperationsClientDeleteSubscriptionOptions struct {
	// A unique string value for operation on the client. This parameter correlates all events from client operation with events
// on the server side. If this value isn't provided, one will be generated and
// provided in the response headers.
	CorrelationID *string
	// A unique string value for tracking the request from the client, preferably a GUID. If this value isn't provided, one will
// be generated and provided in the response headers.
	RequestID *string
}

// FulfillmentOperationsClientGetSubscriptionOptions contains the optional parameters for the FulfillmentOperationsClient.GetSubscription
// method.
type FulfillmentOperationsClientGetSubscriptionOptions struct {
	// A unique string value for operation on the client. This parameter correlates all events from client operation with events
// on the server side. If this value isn't provided, one will be generated and
// provided in the response headers.
	CorrelationID *string
	// A unique string value for tracking the request from the client, preferably a GUID. If this value isn't provided, one will
// be generated and provided in the response headers.
	RequestID *string
}

// FulfillmentOperationsClientListAvailablePlansOptions contains the optional parameters for the FulfillmentOperationsClient.ListAvailablePlans
// method.
type FulfillmentOperationsClientListAvailablePlansOptions struct {
	// A unique string value for operation on the client. This parameter correlates all events from client operation with events
// on the server side. If this value isn't provided, one will be generated and
// provided in the response headers.
	CorrelationID *string
	// A unique string value for tracking the request from the client, preferably a GUID. If this value isn't provided, one will
// be generated and provided in the response headers.
	RequestID *string
}

// FulfillmentOperationsClientListSubscriptionsOptions contains the optional parameters for the FulfillmentOperationsClient.ListSubscriptions
// method.
type FulfillmentOperationsClientListSubscriptionsOptions struct {
	// Optional value, only used for ListSubscriptions.
	ContinuationToken *string
	// A unique string value for operation on the client. This parameter correlates all events from client operation with events
// on the server side. If this value isn't provided, one will be generated and
// provided in the response headers.
	CorrelationID *string
	// A unique string value for tracking the request from the client, preferably a GUID. If this value isn't provided, one will
// be generated and provided in the response headers.
	RequestID *string
}

// FulfillmentOperationsClientResolveOptions contains the optional parameters for the FulfillmentOperationsClient.Resolve
// method.
type FulfillmentOperationsClientResolveOptions struct {
	// A unique string value for operation on the client. This parameter correlates all events from client operation with events
// on the server side. If this value isn't provided, one will be generated and
// provided in the response headers.
	CorrelationID *string
	// A unique string value for tracking the request from the client, preferably a GUID. If this value isn't provided, one will
// be generated and provided in the response headers.
	RequestID *string
}

// FulfillmentOperationsClientUpdateSubscriptionOptions contains the optional parameters for the FulfillmentOperationsClient.UpdateSubscription
// method.
type FulfillmentOperationsClientUpdateSubscriptionOptions struct {
	// A unique string value for operation on the client. This parameter correlates all events from client operation with events
// on the server side. If this value isn't provided, one will be generated and
// provided in the response headers.
	CorrelationID *string
	// A unique string value for tracking the request from the client, preferably a GUID. If this value isn't provided, one will
// be generated and provided in the response headers.
	RequestID *string
}

type MeteringDimension struct {
	Currency *string `json:"currency,omitempty"`
	DisplayName *string `json:"displayName,omitempty"`
	ID *string `json:"id,omitempty"`
	PricePerUnit *float32 `json:"pricePerUnit,omitempty"`
	UnitOfMeasure *string `json:"unitOfMeasure,omitempty"`
}

type MeteringedQuantityIncluded struct {
	DimensionID *string `json:"dimensionId,omitempty"`
	Units *string `json:"units,omitempty"`
}

type Operation struct {
	Action *OperationActionEnum `json:"action,omitempty"`
	ActivityID *string `json:"activityId,omitempty"`
	ID *string `json:"id,omitempty"`
	OfferID *string `json:"offerId,omitempty"`
	PlanID *string `json:"planId,omitempty"`
	PublisherID *string `json:"publisherId,omitempty"`
	Quantity *int32 `json:"quantity,omitempty"`
	Status *OperationStatusEnum `json:"status,omitempty"`
	SubscriptionID *string `json:"subscriptionId,omitempty"`
	TimeStamp *time.Time `json:"timeStamp,omitempty"`
}

type OperationList struct {
	Operations []*Operation `json:"operations,omitempty"`
}

type Plan struct {
	Description *string `json:"description,omitempty"`
	DisplayName *string `json:"displayName,omitempty"`
	HasFreeTrials *bool `json:"hasFreeTrials,omitempty"`
	IsPricePerSeat *bool `json:"isPricePerSeat,omitempty"`
	IsPrivate *bool `json:"isPrivate,omitempty"`
	IsStopSell *bool `json:"isStopSell,omitempty"`
	Market *string `json:"market,omitempty"`
	PlanComponents *PlanComponents `json:"planComponents,omitempty"`
	PlanID *string `json:"planId,omitempty"`
}

type PlanComponents struct {
	MeteringDimensions []*MeteringDimension `json:"meteringDimensions,omitempty"`
	RecurrentBillingTerms []*RecurrentBillingTerm `json:"recurrentBillingTerms,omitempty"`
}

type RecurrentBillingTerm struct {
	Currency *string `json:"currency,omitempty"`
	MeteredQuantityIncluded []*MeteringedQuantityIncluded `json:"meteredQuantityIncluded,omitempty"`
	Price *float32 `json:"price,omitempty"`
	TermDescription *string `json:"termDescription,omitempty"`
	TermUnit *TermUnitEnum `json:"termUnit,omitempty"`
}

// ResolvedSubscription - Summary of the subscription
type ResolvedSubscription struct {
	ID *string `json:"id,omitempty"`
	OfferID *string `json:"offerId,omitempty"`
	PlanID *string `json:"planId,omitempty"`
	Quantity *int64 `json:"quantity,omitempty"`
	Subscription *Subscription `json:"subscription,omitempty"`
	SubscriptionName *string `json:"subscriptionName,omitempty"`
}

type SubscriberPlan struct {
	PlanID *string `json:"planId,omitempty"`
	Quantity *int64 `json:"quantity,omitempty"`
}

type Subscription struct {
	AllowedCustomerOperations []*AllowedCustomerOperationsEnum `json:"allowedCustomerOperations,omitempty"`

	// Indicating whether the subscription will renew automatically.
	AutoRenew *bool `json:"autoRenew,omitempty"`
	Beneficiary *AADIdentifier `json:"beneficiary,omitempty"`
	Created *time.Time `json:"created,omitempty"`
	FulfillmentID *string `json:"fulfillmentId,omitempty"`
	ID *string `json:"id,omitempty"`

	// true - the customer subscription is currently in free trial, false - the customer subscription is not currently in free
// trial.(optional field - default false)
	IsFreeTrial *bool `json:"isFreeTrial,omitempty"`

	// Indicating whether the current subscription is a test asset.
	IsTest *bool `json:"isTest,omitempty"`
	Name *string `json:"name,omitempty"`
	OfferID *string `json:"offerId,omitempty"`
	PlanID *string `json:"planId,omitempty"`
	PublisherID *string `json:"publisherId,omitempty"`
	Purchaser *AADIdentifier `json:"purchaser,omitempty"`
	Quantity *int32 `json:"quantity,omitempty"`

	// Indicates the status of the operation.
	SaasSubscriptionStatus *SubscriptionStatusEnum `json:"saasSubscriptionStatus,omitempty"`

	// Possible Values are None, Csp (Csp sandbox purchase)
	SandboxType *SandboxTypeEnum `json:"sandboxType,omitempty"`
	SessionID *string `json:"sessionId,omitempty"`

	// Dry Run indicates all transactions run as Test-Mode in the commerce stack
	SessionMode *SessionModeEnum `json:"sessionMode,omitempty"`
	StoreFront *string `json:"storeFront,omitempty"`
	Term *SubscriptionTerm `json:"term,omitempty"`
}

// SubscriptionOperationsClientGetOperationStatusOptions contains the optional parameters for the SubscriptionOperationsClient.GetOperationStatus
// method.
type SubscriptionOperationsClientGetOperationStatusOptions struct {
	// A unique string value for operation on the client. This parameter correlates all events from client operation with events
// on the server side. If this value isn't provided, one will be generated and
// provided in the response headers.
	CorrelationID *string
	// A unique string value for tracking the request from the client, preferably a GUID. If this value isn't provided, one will
// be generated and provided in the response headers.
	RequestID *string
}

// SubscriptionOperationsClientListOperationsOptions contains the optional parameters for the SubscriptionOperationsClient.ListOperations
// method.
type SubscriptionOperationsClientListOperationsOptions struct {
	// A unique string value for operation on the client. This parameter correlates all events from client operation with events
// on the server side. If this value isn't provided, one will be generated and
// provided in the response headers.
	CorrelationID *string
	// A unique string value for tracking the request from the client, preferably a GUID. If this value isn't provided, one will
// be generated and provided in the response headers.
	RequestID *string
}

// SubscriptionOperationsClientUpdateOperationStatusOptions contains the optional parameters for the SubscriptionOperationsClient.UpdateOperationStatus
// method.
type SubscriptionOperationsClientUpdateOperationStatusOptions struct {
	// A unique string value for operation on the client. This parameter correlates all events from client operation with events
// on the server side. If this value isn't provided, one will be generated and
// provided in the response headers.
	CorrelationID *string
	// A unique string value for tracking the request from the client, preferably a GUID. If this value isn't provided, one will
// be generated and provided in the response headers.
	RequestID *string
}

type SubscriptionPlans struct {
	Plans []*Plan `json:"plans,omitempty"`
}

type SubscriptionTerm struct {
	EndDate *time.Time `json:"endDate,omitempty"`
	StartDate *time.Time `json:"startDate,omitempty"`
}

type SubscriptionsResponse struct {
	// Link to get the next set of subscriptions.
	NextLink *string `json:"@nextLink,omitempty"`
	Subscriptions []*Subscription `json:"subscriptions,omitempty"`
}

type UpdateOperation struct {
	PlanID *string `json:"planId,omitempty"`
	Quantity *int64 `json:"quantity,omitempty"`
	Status *UpdateOperationStatusEnum `json:"status,omitempty"`
}

